Test simple punctuation tokens

## BEGIN
-- in --
( ) . ! ==
-- out --
LeftParen 1:1-1:2
RightParen 1:3-1:4
Dot 1:5-1:6
Not 1:7-1:8
Equal 1:9-1:11
Eof 2:1-2:1
## END

Test identifiers and keywords

## BEGIN
-- in --
foo in true false _test var123
-- out --
Identifier(foo) 1:1-1:4
In 1:5-1:7
BooleanLiteral(true) 1:8-1:12
BooleanLiteral(false) 1:13-1:18
Identifier(_test) 1:19-1:24
Identifier(var123) 1:25-1:31
Eof 2:1-2:1
## END

Test string literals

## BEGIN
-- in --
'hello' 'world with spaces' ''
-- out --
StringLiteral(hello) 1:1-1:8
StringLiteral(world with spaces) 1:9-1:28
StringLiteral() 1:29-1:31
Eof 2:1-2:1
## END

Test numbers

## BEGIN
-- in --
123 456.789 0 0.5
-- out --
NumberLiteral(123) 1:1-1:4
NumberLiteral(456.789) 1:5-1:12
NumberLiteral(0) 1:13-1:14
NumberLiteral(0.5) 1:15-1:18
Eof 2:1-2:1
## END

Test multiline input

## BEGIN
-- in --
foo
bar
-- out --
Identifier(foo) 1:1-1:4
Identifier(bar) 2:1-2:4
Eof 3:1-3:1
## END

Test property access

## BEGIN
-- in --
user.name
-- out --
Identifier(user) 1:1-1:5
Dot 1:5-1:6
Identifier(name) 1:6-1:10
Eof 2:1-2:1
## END

Test whitespace handling

## BEGIN
-- in --
  foo   bar  
-- out --
Identifier(foo) 1:3-1:6
Identifier(bar) 1:9-1:12
Eof 2:1-2:1
## END

Test complex expression

## BEGIN
-- in --
user.name == 'admin'
-- out --
Identifier(user) 1:1-1:5
Dot 1:5-1:6
Identifier(name) 1:6-1:10
Equal 1:11-1:13
StringLiteral(admin) 1:14-1:21
Eof 2:1-2:1
## END

Test parenthesized expression

## BEGIN
-- in --
!(foo == true)
-- out --
Not 1:1-1:2
LeftParen 1:2-1:3
Identifier(foo) 1:3-1:6
Equal 1:7-1:9
BooleanLiteral(true) 1:10-1:14
RightParen 1:14-1:15
Eof 2:1-2:1
## END

Test array brackets

## BEGIN
-- in --
[1, 2, 3]
-- out --
LeftBracket 1:1-1:2
NumberLiteral(1) 1:2-1:3
Comma 1:3-1:4
NumberLiteral(2) 1:5-1:6
Comma 1:6-1:7
NumberLiteral(3) 1:8-1:9
RightBracket 1:9-1:10
Eof 2:1-2:1
## END

Test empty array

## BEGIN
-- in --
[]
-- out --
LeftBracket 1:1-1:2
RightBracket 1:2-1:3
Eof 2:1-2:1
## END
