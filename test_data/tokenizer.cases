The tokenizer allows empty files, and no tokens are emitted.

## BEGIN
-- in --
-- out --
## END

## BEGIN
-- in --
<input type="" value="" disabled="">
-- out --
StartTag(input) [type=[] 1:8-1:15 value=[] 1:16-1:24 disabled=[] 1:25-1:36] 1:1-1:37
## END

## BEGIN
-- in --
<h1 foo="bar"x="y">
-- out --
StartTag(h1) [foo=[bar] 1:5-1:14 x=[y] 1:14-1:19] 1:1-1:20
## END

## BEGIN
-- in --
<h1 foo bar/>
-- out --
SelfClosingTag(h1) [foo=[] 1:5-1:8 bar=[] 1:9-1:12] 1:1-1:14
## END

## BEGIN
-- in --
<h1 foo/>
-- out --
SelfClosingTag(h1) [foo=[] 1:5-1:8] 1:1-1:10
## END

## BEGIN
-- in --
<p><!-- -->
</p>
-- out --
StartTag(p) [] 1:1-1:4
Comment 1:4-1:12
Text 1:12-2:1
EndTag(p) 2:1-2:5
## END

## BEGIN
-- in --
<textarea>
	<div></div>
</textarea>
-- out --
StartTag(textarea) [] 1:1-1:11
Text 1:11-2:2
StartTag(div) [] 2:2-2:7
EndTag(div) 2:7-2:13
Text 2:13-3:1
EndTag(textarea) 3:1-3:12
## END

## BEGIN
-- in --
<title><slot-title/></title>
-- out --
StartTag(title) [] 1:1-1:8
SelfClosingTag(slot-title) [] 1:8-1:21
EndTag(title) 1:21-1:29
## END

## BEGIN
-- in --
<p><!-- --></p>
-- out --
StartTag(p) [] 1:1-1:4
Comment 1:4-1:12
EndTag(p) 1:12-1:16
## END

## BEGIN
-- in --
<!-- Comment with -- dashes -- inside -->
-- out --
Comment 1:1-1:42
## END

## BEGIN
-- in --
<p><!--
A comment
that stretches
over several
lines --></p>
-- out --
StartTag(p) [] 1:1-1:4
Comment 1:4-5:10
EndTag(p) 5:10-5:14
## END

## BEGIN
-- in --
<!-- This comment has <tags> and "quotes" and 'apostrophes' -->
-- out --
Comment 1:1-1:64
## END

## BEGIN
-- in --
<!DOCTYPE   html>
-- out --
Doctype 1:1-1:18
## END

## BEGIN
-- in --
</div >
-- out --
EndTag(div) 1:1-1:8
## END

## BEGIN
-- in --
<h1/>
-- out --
SelfClosingTag(h1) [] 1:1-1:6
## END

## BEGIN
-- in --
<h1 />
-- out --
SelfClosingTag(h1) [] 1:1-1:7
## END

## BEGIN
-- in --
<style>
  body { color: red; }
  .class { font-size: 12px; }
</style>
-- out --
StartTag(style) [] 1:1-1:8
Text 1:8-4:1
EndTag(style) 4:1-4:9
## END

## BEGIN
-- in --
<h1></h1>
<h2></h2>
<h3></h3>
<h4></h4>
<h5></h5>
<h6></h6>
-- out --
StartTag(h1) [] 1:1-1:5
EndTag(h1) 1:5-1:10
Text 1:10-2:1
StartTag(h2) [] 2:1-2:5
EndTag(h2) 2:5-2:10
Text 2:10-3:1
StartTag(h3) [] 3:1-3:5
EndTag(h3) 3:5-3:10
Text 3:10-4:1
StartTag(h4) [] 4:1-4:5
EndTag(h4) 4:5-4:10
Text 4:10-5:1
StartTag(h5) [] 5:1-5:5
EndTag(h5) 5:5-5:10
Text 5:10-6:1
StartTag(h6) [] 6:1-6:5
EndTag(h6) 6:5-6:10
## END

## BEGIN
-- in --
<div
  class="multiline"
  id="test"
  data-value="something">
</div>
-- out --
StartTag(div) [class=[multiline] 2:3-2:20 id=[test] 3:3-3:12 data-value=[something] 4:3-4:25] 1:1-4:26
Text 4:26-5:1
EndTag(div) 5:1-5:7
## END

## BEGIN
-- in --
<script>
  const html = "<title>Nested</title>";
  document.write(html);
</script>
-- out --
StartTag(script) [] 1:1-1:9
Text 1:9-4:1
EndTag(script) 4:1-4:10
## END

## BEGIN
-- in --
<hop-x-raw>foo bar</hop-x-raw>
-- out --
StartTag(hop-x-raw) [] 1:1-1:12
Text 1:12-1:19
EndTag(hop-x-raw) 1:19-1:31
## END

## BEGIN
-- in --
<hop-x-raw>
  <div>some html</div>
</hop-x-raw>
-- out --
StartTag(hop-x-raw) [] 1:1-1:12
Text 1:12-3:1
EndTag(hop-x-raw) 3:1-3:13
## END

## BEGIN
-- in --
<p></p><p></p>
-- out --
StartTag(p) [] 1:1-1:4
EndTag(p) 1:4-1:8
StartTag(p) [] 1:8-1:11
EndTag(p) 1:11-1:15
## END

## BEGIN
-- in --
<main-comp params-as="foo">
	<script>
		const x = "<div></div>";
	</script>
</main-comp>
-- out --
StartTag(main-comp) [params-as=[foo] 1:12-1:27] 1:1-1:28
Text 1:28-2:2
StartTag(script) [] 2:2-2:10
Text 2:10-4:2
EndTag(script) 4:2-4:11
Text 4:11-5:1
EndTag(main-comp) 5:1-5:13
## END

## BEGIN
-- in --
<!DOCTYPE html>
<html>
<head>
  <title>My Page</title>
</head>
<body>
  <div class="container">
    Hello, world!
  </div>
</body>
</html>
-- out --
Doctype 1:1-1:16
Text 1:16-2:1
StartTag(html) [] 2:1-2:7
Text 2:7-3:1
StartTag(head) [] 3:1-3:7
Text 3:7-4:3
StartTag(title) [] 4:3-4:10
Text 4:10-4:17
EndTag(title) 4:17-4:25
Text 4:25-5:1
EndTag(head) 5:1-5:8
Text 5:8-6:1
StartTag(body) [] 6:1-6:7
Text 6:7-7:3
StartTag(div) [class=[container] 7:8-7:25] 7:3-7:26
Text 7:26-9:3
EndTag(div) 9:3-9:9
Text 9:9-10:1
EndTag(body) 10:1-10:8
Text 10:8-11:1
EndTag(html) 11:1-11:8
## END

## BEGIN
-- in --
<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
<line x1="16.5" y1="9.4" x2="7.5" y2="4.21"></line>
<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path>
<polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline>
<line x1="12" y1="22.08" x2="12" y2="12"></line>
</svg>
-- out --
StartTag(svg) [xmlns=[http://www.w3.org/2000/svg] 1:6-1:40 width=[24] 1:41-1:51 height=[24] 1:52-1:63 viewBox=[0 0 24 24] 1:64-1:83 fill=[none] 1:84-1:95 stroke=[currentColor] 1:96-1:117 stroke-width=[2] 1:118-1:134 stroke-linecap=[round] 1:135-1:157 stroke-linejoin=[round] 1:158-1:181] 1:1-1:182
Text 1:182-2:1
StartTag(line) [x1=[16.5] 2:7-2:16 y1=[9.4] 2:17-2:25 x2=[7.5] 2:26-2:34 y2=[4.21] 2:35-2:44] 2:1-2:45
EndTag(line) 2:45-2:52
Text 2:52-3:1
StartTag(path) [d=[M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z] 3:7-3:132] 3:1-3:133
EndTag(path) 3:133-3:140
Text 3:140-4:1
StartTag(polyline) [points=[3.27 6.96 12 12.01 20.73 6.96] 4:11-4:49] 4:1-4:50
EndTag(polyline) 4:50-4:61
Text 4:61-5:1
StartTag(line) [x1=[12] 5:7-5:14 y1=[22.08] 5:15-5:25 x2=[12] 5:26-5:33 y2=[12] 5:34-5:41] 5:1-5:42
EndTag(line) 5:42-5:49
Text 5:49-6:1
EndTag(svg) 6:1-6:7
## END

## BEGIN
-- in --
<svg xmlns="http://www.w3.org/2000/svg" width="128" height="128" version="1.1" viewBox="0 0 128 128" class="size-12">
	<g style="fill: none; stroke: currentcolor; stroke-width: 5px; stroke-linecap: round; stroke-linejoin: round;">
		<path d="M20.04 38 64 22l43.96 16L64 54Z"></path>
		<path d="M17.54 47.09v48l35.099 12.775"></path>
		<path d="M64 112V64l46.46-16.91v48L77.988 106.91"></path>
	</g>
</svg>
-- out --
StartTag(svg) [xmlns=[http://www.w3.org/2000/svg] 1:6-1:40 width=[128] 1:41-1:52 height=[128] 1:53-1:65 version=[1.1] 1:66-1:79 viewBox=[0 0 128 128] 1:80-1:101 class=[size-12] 1:102-1:117] 1:1-1:118
Text 1:118-2:2
StartTag(g) [style=[fill: none; stroke: currentcolor; stroke-width: 5px; stroke-linecap: round; stroke-linejoin: round;] 2:5-2:112] 2:2-2:113
Text 2:113-3:3
StartTag(path) [d=[M20.04 38 64 22l43.96 16L64 54Z] 3:9-3:44] 3:3-3:45
EndTag(path) 3:45-3:52
Text 3:52-4:3
StartTag(path) [d=[M17.54 47.09v48l35.099 12.775] 4:9-4:42] 4:3-4:43
EndTag(path) 4:43-4:50
Text 4:50-5:3
StartTag(path) [d=[M64 112V64l46.46-16.91v48L77.988 106.91] 5:9-5:52] 5:3-5:53
EndTag(path) 5:53-5:60
Text 5:60-6:2
EndTag(g) 6:2-6:6
Text 6:6-7:1
EndTag(svg) 7:1-7:7
## END

## BEGIN
-- in --
<main-comp>
	<form id="form">
		<input type="text" required>
		<button type="submit">Send</button>
	</form>
</main-comp>
-- out --
StartTag(main-comp) [] 1:1-1:12
Text 1:12-2:2
StartTag(form) [id=[form] 2:8-2:17] 2:2-2:18
Text 2:18-3:3
StartTag(input) [type=[text] 3:10-3:21 required=[] 3:22-3:30] 3:3-3:31
Text 3:31-4:3
StartTag(button) [type=[submit] 4:11-4:24] 4:3-4:25
Text 4:25-4:29
EndTag(button) 4:29-4:38
Text 4:38-5:2
EndTag(form) 5:2-5:9
Text 5:9-6:1
EndTag(main-comp) 6:1-6:13
## END

## BEGIN
-- in --
<if {foo}>
-- out --
StartTag(if) [] {foo} 1:1-1:11
## END

## BEGIN
-- in --
<div {bar} class="test">
-- out --
StartTag(div) [class=[test] 1:12-1:24] {bar} 1:1-1:25
## END

## BEGIN
-- in --
<if {user.name == 'John'}>
-- out --
StartTag(if) [] {user.name == 'John'} 1:1-1:27
## END

## BEGIN
-- in --
<component {obj.prop.subprop}>
-- out --
StartTag(component) [] {obj.prop.subprop} 1:1-1:31
## END

## BEGIN
-- in --
<button {enabled == 'yes'} disabled>
-- out --
StartTag(button) [disabled=[] 1:28-1:36] {enabled == 'yes'} 1:1-1:37
## END

## BEGIN
-- in --
<input {variable_name_123}>
-- out --
StartTag(input) [] {variable_name_123} 1:1-1:28
## END

## BEGIN
-- in --
<div {  user.name  } class="test">
-- out --
StartTag(div) [class=[test] 1:22-1:34] {  user.name  } 1:1-1:35
## END

## BEGIN
-- in --
<span {'hello world'}>
-- out --
StartTag(span) [] {'hello world'} 1:1-1:23
## END

## BEGIN
-- in --
<form {(user.role == 'admin')}>
-- out --
StartTag(form) [] {(user.role == 'admin')} 1:1-1:32
## END

## BEGIN
-- in --
<section {a == b == c}>
-- out --
StartTag(section) [] {a == b == c} 1:1-1:24
## END

## BEGIN
-- in --
<for {user in users}>
-- out --
StartTag(for) [] {user in users} 1:1-1:22
## END

## BEGIN
-- in --
<for {item in user.items}>
-- out --
StartTag(for) [] {item in user.items} 1:1-1:27
## END

## BEGIN
-- in --
<div {foo in bars}>
-- out --
StartTag(div) [] {foo in bars} 1:1-1:20
## END
